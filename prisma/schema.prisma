// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model Bau {
  id String @default(cuid()) @id
  name String
}

model User {
  id String @default(cuid()) @id
  username String 
  email String? 
  password String
  profilePhoto String @default("https://i.pinimg.com/564x/fc/68/c7/fc68c7853d0b5ecd72df224a7fe57071.jpg")
  role Role @default(MAHASISWA)
  admin Admin? 
  mahasiswa Mahasiswa?
  dosen Dosen?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([username, email])
}

enum Role {
  ADMIN
  MAHASISWA
  DOSEN
}

model Admin {
  id String @default(cuid()) @id
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique
  fullname String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Mahasiswa {
  id String @default(cuid()) @id
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique
  nim String @unique
  fullname String
  semester Int
  role RoleMahasiswa @default(ANGGOTA)
  prodiId String
  konsentrasiId String
  kelasId String?
  angkatanId String?
  kelompokId String?
  proyekId String? 
  laporans Laporan[]
  biayaOperasionals BiayaOperasional[]
  persyaratan Persyaratan?
  pendaftaran Pendaftaran?
  prodi ProgramStudi @relation(fields: [prodiId], references: [id])
  konsentrasi Konsentrasi @relation(fields: [konsentrasiId], references: [id])
  proyek Proyek? @relation(fields: [proyekId], references: [id])
  kelas Kelas? @relation(fields: [kelasId], references: [id])
  angkatan Angkatan? @relation(fields: [angkatanId], references: [id])
  kelompok Kelompok? @relation(fields: [kelompokId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum RoleMahasiswa {
  KETUA
  ANGGOTA
}

model Kelas {
  id String @default(cuid()) @id
  name String
  mahasiswa Mahasiswa[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Angkatan {
  id String @default(cuid()) @id
  tahun Int
  mahasiswa Mahasiswa[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Kelompok {
  id String @default(cuid()) @id
  name String
  mahasiswa Mahasiswa[]
  proyekId String
  proyek Proyek @relation(fields: [proyekId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProgramStudi {
  id String @default(cuid()) @id
  name String
  fakultas Fakultas @relation(fields: [fakultasId], references: [id])
  fakultasId String
  konsentrasi Konsentrasi[]
  mahasiswa Mahasiswa[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Fakultas {
  id String @default(cuid()) @id
  name String
  programStudi ProgramStudi[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Konsentrasi {
  id String @default(cuid()) @id
  name String
  programStudi ProgramStudi? @relation(fields: [programStudiId], references: [id])
  programStudiId String?
  mahasiswa Mahasiswa[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Dosen {
  id String @default(cuid()) @id
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique
  fullname String
  nidn String @unique
  proyekId String? 
  proyek Proyek? @relation(fields: [proyekId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Proyek {
  id String @default(cuid()) @id
  name String
  photo String
  bolehDimulai Boolean @default(false)
  telahSelesai Boolean @default(false)
  verified Boolean @default(false)
  description String
  lokasi String?
  type TypeProyek @default(KKN)
  tanggalMulai DateTime?
  tanggalSelesai DateTime?
  batasOrang Int
  pembimbing Dosen[]
  mahasiswa Mahasiswa[]
  laporan Laporan[]
  kelompok Kelompok[]
  biayaOperasional BiayaOperasional[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum TypeProyek {
  KKN
  KKP
}


model Laporan {
  id String @default(cuid()) @id
  photo String
  file String
  proyekId String
  proyek Proyek @relation(fields: [proyekId], references: [id])
  mahasiswaId String @unique
  mahasiswa Mahasiswa @relation(fields: [mahasiswaId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Persyaratan {
  id String @default(cuid()) @id
  keteranganSehat Boolean @default(false)
  keteranganPembayaran Boolean @default(false)
  keteranganOrangTua Boolean @default(false)
  keteranganKelakuanBaik Boolean @default(false)
  mahasiswaId String @unique
  mahasiswa Mahasiswa @relation(fields: [mahasiswaId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Pendaftaran {
  id String @default(cuid()) @id
  mahasiswaId String @unique
  mahasiswa Mahasiswa @relation(fields: [mahasiswaId], references: [id])
  tanggalPendaftaran DateTime @default(now())
  buktiPembayaran String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BiayaOperasional {
  id String @default(cuid()) @id
  proyekId String
  proyek Proyek @relation(fields: [proyekId], references: [id])
  biayaTransportasi Int
  biayaProyek Int
  biayaDll Int
  tanggalBiaya DateTime @default(now())
  mahasiswaId String
  mahasiswa Mahasiswa @relation(fields: [mahasiswaId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}